{
  "version": 2,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 20,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "default-gnu",
      "displayName": "Default Config GNU",
      "generator": "Ninja",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_COMPILER": "gcc-10",
        "CMAKE_CXX_COMPILER": "g++-10",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      },
      "environment": {
        "APP_GNU_DEFAULT_FLAGS": "-Wall -Wextra -pedantic -Wabi -Wshadow -Wfloat-equal -Wcast-align -Wdisabled-optimization -Wformat=2 -Winvalid-pch -Wmissing-include-dirs -Wredundant-decls -Wpacked -Wpointer-arith -Wstack-protector -fstack-protector -Wstrict-aliasing=3 -fstrict-aliasing -Wswitch-default -Wlogical-op -fdiagnostics-color -Wshift-overflow=2 -Wnull-dereference -Wunused-const-variable=1 -Wduplicated-branches -Walloc-zero -Wformat-overflow=1 -Wduplicated-cond -Warray-bounds=2 -Wdeprecated-copy-dtor -Wredundant-tags -Wuseless-cast -Wmismatched-tags -Wold-style-cast -fopenmp"
      },
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "GNU10"
        }
      }
    },
    {
      "name": "default-clang",
      "displayName": "Default Config CLang",
      "generator": "Ninja",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang-10",
        "CMAKE_CXX_COMPILER": "clang++-10",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      },
      "environment": {
        "APP_CLANG_DEFAULT_FLAGS": "-Wall -Wextra -pedantic -Wshadow-all -Wfloat-equal -Wcast-align -Wdisabled-optimization -Wformat=2 -Winvalid-pch -Winit-self -Wmissing-include-dirs -Wredundant-decls -Wpacked -Wpointer-arith -Wstack-protector -Wswitch-default -Wwrite-strings -Wno-type-safety -Wunused -Winfinite-recursion -fcolor-diagnostics -Winconsistent-missing-destructor-override -Wextra-semi-stmt -Wtautological-bitwise-compare -Wc99-designator -Wreorder -fopenmp"
      },
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "CLANG10"
        }
      }
    },
    {
      "name": "debug-gnu",
      "inherits": "default-gnu",
      "displayName": "Debug Config",
      "description": "Debug build using Ninja generator",
      "binaryDir": "${sourceDir}/build/debug-gnu",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_CXX_FLAGS": "$env{APP_GNU_DEFAULT_FLAGS} -Og -g3 -fno-inline -rdynamic -DUSE_ASSERTS"
      }
    },
    {
      "name": "release-gnu",
      "inherits": "default-gnu",
      "displayName": "Release Config",
      "description": "Release build using Ninja generator",
      "binaryDir": "${sourceDir}/build/release-gnu",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_CXX_FLAGS": "$env{APP_GNU_DEFAULT_FLAGS} -O3 -fno-rtti -fno-exceptions -fomit-frame-pointer -flto"
      }
    },
    {
      "name": "releaseWithDebug-gnu",
      "inherits": "default-gnu",
      "displayName": "Release With Debug Config",
      "description": "Release with debu build using Ninja generator",
      "binaryDir": "${sourceDir}/build/relwdbg-gnu",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "RelWithDebInfo",
        "CMAKE_CXX_FLAGS": "$env{APP_GNU_DEFAULT_FLAGS} -O3 -fno-rtti -fno-exceptions -fomit-frame-pointer -flto -DUSE_ASSERTS -g3"
      }
    },
    {
      "name": "sanitize-address",
      "inherits": "default-gnu",
      "displayName": "sanitize-address Config",
      "description": "sanitize-address build using Ninja generator",
      "binaryDir": "${sourceDir}/build/sanitize-address",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "sanitize-address",
        "CMAKE_CXX_FLAGS": "$env{APP_GNU_DEFAULT_FLAGS} -O3 -fno-rtti -fno-exceptions -fomit-frame-pointer -flto -g -fno-inline -fno-omit-frame-pointer -fno-optimize-sibling-calls --param max-gcse-memory=300000000 --param max-vartrack-size=100000000 -fsanitize=address"
      }
    },
    {
      "name": "sanitize-thread",
      "inherits": "default-gnu",
      "displayName": "sanitize-thread Config",
      "description": "sanitize-thread build using Ninja generator",
      "binaryDir": "${sourceDir}/build/sanitize-thread",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_CXX_FLAGS": "$env{APP_GNU_DEFAULT_FLAGS} -O3 -fno-rtti -fno-exceptions -fomit-frame-pointer -flto -g -fno-inline -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=thread"
      }
    },
    {
      "name": "sanitize-undefined",
      "inherits": "default-gnu",
      "displayName": "sanitize-undefined Config",
      "description": "sanitize-undefined build using Ninja generator",
      "binaryDir": "${sourceDir}/build/sanitize-undefined",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_CXX_FLAGS": "$env{APP_GNU_DEFAULT_FLAGS} -O3 -fno-rtti -fno-exceptions -fomit-frame-pointer -flto -g -fno-inline -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=undefined"
      }
    },
    {
      "name": "coverage",
      "inherits": "default-gnu",
      "displayName": "Coverage Config",
      "description": "Coverage build using Ninja generator",
      "binaryDir": "${sourceDir}/build/coverage",
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "$env{APP_GNU_DEFAULT_FLAGS} -fprofile-arcs -ftest-coverage",
        "CMAKE_C_FLAGS": "-ftest-coverage -fprofile-arcs",
        "CMAKE_EXE_LINKER_FLAGS": "-ftest-coverage -fprofile-arcs"
      }
    },
    {
      "name": "debug-clang",
      "inherits": "default-clang",
      "displayName": "Debug Config",
      "description": "Debug build using Ninja generator",
      "binaryDir": "${sourceDir}/build/debug-clang",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_CXX_FLAGS": "$env{APP_CLANG_DEFAULT_FLAGS} -Og -g3 -fno-inline -DUSE_ASSERTS"
      }
    },
    {
      "name": "release-clang",
      "inherits": "default-clang",
      "displayName": "Release Config",
      "description": "Release build using Ninja generator",
      "binaryDir": "${sourceDir}/build/release-clang",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_CXX_FLAGS": "$env{APP_CLANG_DEFAULT_FLAGS} -O3 -fvectorize -fslp-vectorize -mavx"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "debug-gnu",
      "configurePreset": "debug-gnu"
    },
    {
      "name": "release-gnu",
      "configurePreset": "release-gnu"
    },
    {
      "name": "relwdbg-gnu",
      "configurePreset": "releaseWithDebug-gnu"
    },
    {
      "name": "sanitize-address",
      "configurePreset": "sanitize-address"
    },
    {
      "name": "sanitize-thread",
      "configurePreset": "sanitize-thread"
    },
    {
      "name": "sanitize-undefined",
      "configurePreset": "sanitize-undefined"
    },
    {
      "name": "coverage",
      "configurePreset": "coverage"
    },
    {
      "name": "debug-clang",
      "configurePreset": "debug-clang"
    },
    {
      "name": "release-clang",
      "configurePreset": "release-clang"
    }
  ],
  "vendor": {
    "hereon.de": {
      "autoFormat": false
    }
  }
}
